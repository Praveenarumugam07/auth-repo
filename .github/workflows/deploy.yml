name: Deploy to GCP VM

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        token_format: "access_token"
        workload_identity_provider: "projects/57920515119/locations/global/workloadIdentityPools/github-pool/providers/github-provider"
        service_account: "github-vm-deployer@57920515119.iam.gserviceaccount.com"

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Create VM if not exists
      run: |
        gcloud compute instances describe my-vm --zone asia-south1-c || \
        gcloud compute instances create my-vm \
          --zone asia-south1-c \
          --machine-type e2-medium \
          --tags http-server \
          --image-family debian-11 \
          --image-project debian-cloud \
          --metadata startup-script='#! /bin/bash
            sudo apt update
            sudo apt install -y python3-pip
            pip3 install flask
            cat << EOF > app.py
            from flask import Flask
            app = Flask(__name__)
            @app.route("/")
            def hello():
                return "Hello from GitHub Actions and GCP VM!"
            if __name__ == "__main__":
                app.run(host="0.0.0.0", port=8080)
            EOF
            nohup python3 app.py &'

    - name: Open firewall for port 8080
      run: |
        gcloud compute firewall-rules create allow-8080 \
          --allow tcp:8080 \
          --target-tags http-server \
          --description="Allow port 8080 access" || echo "Firewall rule exists"

    - name: Print VM External IP
      run: |
        gcloud compute instances describe my-vm --zone asia-south1-c \
        --format='get(networkInterfaces[0].accessConfigs[0].natIP)'
