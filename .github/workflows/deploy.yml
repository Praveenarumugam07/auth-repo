name: Deploy to GCP VM

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        token_format: "access_token"
        workload_identity_provider: "projects/57920515119/locations/global/workloadIdentityPools/github-pool/providers/github-provider"
        service_account: "github-vm-deployer@sylvan-hydra-464904-d9.iam.gserviceaccount.com"

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Create VM if not exists and deploy app
      run: |
        # Check if VM exists
        if ! gcloud compute instances describe my-vm --zone asia-south1-c >/dev/null 2>&1; then
          echo "VM does not exist. Creating..."
          gcloud compute instances create my-vm \
            --zone asia-south1-c \
            --machine-type e2-medium \
            --tags http-server \
            --image-family debian-11 \
            --image-project debian-cloud \
            --metadata-from-file startup-script=startup-script.sh
        else
          echo "VM already exists. Skipping creation."
        fi

    - name: Open firewall for port 8080
      run: |
        if ! gcloud compute firewall-rules describe allow-8080 >/dev/null 2>&1; then
          gcloud compute firewall-rules create allow-8080 \
            --allow tcp:8080 \
            --target-tags http-server \
            --description="Allow port 8080 access"
        else
          echo "Firewall rule for port 8080 already exists."
        fi

    - name: Print VM External IP
      run: |
        EXTERNAL_IP=$(gcloud compute instances describe my-vm --zone asia-south1-c \
          --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
        echo "Your application is deployed at http://$EXTERNAL_IP:8080"
